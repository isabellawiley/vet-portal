openapi: 3.0.0
info:
  title: "RP Flask REST API"
  description: "An API for vet appointments"
  version: "1.0.0"

servers:
  - url: "/api"

components:
  schemas:
    Owner:
      type: "object"
      required:
        - "lname"
      properties:
        fname:
          type: "string"
        lname:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
  parameters:
    owner_id:
      name: "owner_id"
      description: "ID of the owner to get"
      in: path
      required: True
      schema:
        type: "string"
    password:
      name: "password"
      description: "Password the owner"
      in: path
      required: True
      schema:
        type: "string"
    pet_id:
      name: "pet_id"
      description: "ID of the pet"
      in: path
      required: true
      schema:
        type: "string"
    vet_id:
      name: "vet_id"
      description: "ID of the vet"
      in: path
      required: true
      schema:
        type: "string"
    appointment_id:
      name: "appointment_id"
      description: "ID of the appointment"
      in: path
      required: true
      schema:
        type: "string"

paths:
  /login:
    get:
      operationId: "owners.login"
      tags:
          - "Owners"
      summary: "Login owner"
      parameters:
        - $ref: "#/components/parameters/password"
      responses:
        "200":
          description: "Successfully logged in"
  /owners:
    get:
      operationId: "owners.read_all"
      tags:
        - Owners
      summary: "Read list of owners"
      responses:
        "200":
          description: "Successfully read owners list"
    post:
      operationId: "owners.create"
      tags:
        - Owners
      summary: "Create an owner"
      requestBody:
        description: "Owner to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "owner"
              $ref: "#/components/schemas/Owner"
      responses:
        "201":
          description: "Successfully create owner"
  /owners/{owner_id}:
    get:
        operationId: "owners.read_one"
        tags:
          - "Owners"
        summary: "Read one owner"
        parameters:
          - $ref: "#/components/parameters/owner_id"
        responses:
          "200":
            description: "Successfully read owner"
    put:
      tags:
        - Owners
      operationId: "owners.update"
      summary: "Update owner"
      parameters:
        - $ref: "#/components/parameters/owner_id"
      responses:
        "200":
          description: "Successfully updated owner"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "owner"
              $ref: "#/components/schemas/Owner"
    delete:
      tags:
        - Owners
      operationId: "owners.delete"
      summary: "Delete an owner"
      parameters:
        - $ref: "#/components/parameters/owner_id"
      responses:
        "204":
          description: "Successfully delete owner"
  /owners/{owner_id}/pets:
    get:
        operationId: "owners.read_pets"
        tags:
          - "Owners"
        summary: "Read all owner pets"
        parameters:
          - $ref: "#/components/parameters/owner_id"
        responses:
          "200":
            description: "Successfully read all owner pets"
  /owners/{owner_id}/appointments:
    get:
        operationId: "owners.read_appointments"
        tags:
          - "Owners"
        summary: "Read all owner appointments"
        parameters:
          - $ref: "#/components/parameters/owner_id"
        responses:
          "200":
            description: "Successfully read all owner appointments"
  /pets:
    get:
      operationId: "pets.read_all"
      tags:
        - Pets
      summary: "Read list of pets"
      responses:
        "200":
          description: "Successfully read pets list"
    post:
      operationId: "pets.create"
      tags:
        - Pets
      summary: "Create a pet associated with an owner"
      requestBody:
        description: "Pet to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "pet"
              type: "object"
              properties:
                owner_id:
                  type: "integer"
                name:
                  type: "string"
                species:
                  type: "string"
                breed:
                  type: "string"
                image:
                  type: "string"
                age:
                  type: "integer"
      responses:
        "201":
          description: "Successfully created a pet"
  /pets/{pet_id}:
    get:
      operationId: "pets.read_one"
      tags:
        - Pets
      summary: "Read one pet"
      parameters:
        - $ref: "#/components/parameters/pet_id"
      responses:
        "200":
          description: "Successfully read one pet"
    put:
      tags:
        - Pets
      operationId: "pets.update"
      summary: "Update a pet"
      parameters:
        - $ref: "#/components/parameters/pet_id"
      responses:
        "200":
          description: "Successfully updated pet"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "pet"
              type: "object"
              properties:
                name:
                  type: "string"
                species:
                  type: "string"
                breed:
                  type: "string"
                image:
                  type: "string"
    delete:
      tags:
        - Pets
      operationId: "pets.delete"
      summary: "Delete a pet"
      parameters:
        - $ref: "#/components/parameters/pet_id"
      responses:
        "204":
          description: "Successfully deleted pet"
  /vets:
    get:
      operationId: "vets.read_all"
      tags:
        - Vets
      summary: "Read a list of vets"
      responses:
        "200":
          description: "Successfully read vets list"
    post:
      operationId: "vets.create"
      tags:
        - Vets
      summary: "Create a vet"
      requestBody:
        description: "Vet to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "vet"
              type: "object"
              properties:
                name:
                  type: "string"
                image:
                  type: "string"
                bio:
                  type: "string"
                
      responses:
        "201":
          description: "Successfully created vet"
  /vets/{vet_id}:
    get:
      operationId: "vets.read_one"
      tags:
        - Vets
      summary: "Read one vet"
      parameters:
        - $ref: "#/components/parameters/vet_id"
      responses:
        "200":
          description: "Successfully read vet"
    put:
      tags:
        - Vets
      operationId: "vets.update"
      summary: "Update a vet"
      parameters:
        - $ref: "#/components/parameters/vet_id"
      responses:
        "200":
          description: "Successfully updated vet"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "vet"
              type: "object"
              properties:
                name:
                  type: "string"
                image:
                  type: "string"
                bio:
                  type: "string"
    delete:
      tags:
        - Vets
      operationId: "vets.delete"
      summary: "Delete a vet"
      parameters:
        - $ref: "#/components/parameters/vet_id"
      responses:
        "204":
          description: "Successfully deleted vet"
  /vets/{vet_id}/appointments:
    get:
      operationId: "vets.read_appointment_data"
      tags:
        - Vets
      summary: "Read appointments of one vet"
      parameters:
        - $ref: "#/components/parameters/vet_id"
      responses:
        "200":
          description: "Successfully read appointments of vet"
  /appointments:
    get:
      operationId: "appointments.read_all"
      tags:
        - Appointments
      summary: "Read the list of appointments"
      responses:
        "200":
          description: "Successfully read appointments list"
    post:
      operationId: "appointments.create"
      tags:
        - Appointments
      summary: "Create an appointment"
      requestBody:
        description: "Appointment to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "appointment"
              type: "object"
              properties:
                vet_id:
                  type: "integer"
                pet_id:
                  type: "integer"
                date:
                  type: "string"
      responses:
        "201":
          description: "Successfully created an appointment"
  /appointments/{appointment_id}:
    get:
      operationId: "appointments.read_one"
      tags:
        - Appointments
      summary: "Read one appointment"
      parameters:
        - $ref: "#/components/parameters/appointment_id"
      responses:
        "200":
          description: "Successfully read one appointment"
    put:
      operationId: "appointments.update"
      tags:
        - Appointments
      summary: "Update an appointment"
      parameters:
        - $ref: "#/components/parameters/appointment_id"
      responses:
        "200":
          description: "Successfully updated appointment"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "appointment"
              type: "object"
              properties:
                vet_id:
                  type: "integer"
                pet_id:
                  type: "integer"
                date:
                  type: "string"
    delete:
      operationId: "appointments.delete"
      tags:
        - Appointments
      summary: "Delete an appointment"
      parameters:
        - $ref: "#/components/parameters/appointment_id"
      responses:
        "204":
          description: "Successfully deleted appointment"
      